{"version":3,"sources":["redux/todos/todoTypes.js","redux/todos/todoActions.js","components/LeftTable.js","components/Right.js","containers/Home.js","redux/todos/todoReducer.js","redux/todos/userReducer.js","redux/rootReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_TODO_REQUEST","FETCH_TODO_SUCCESS","FETCH_TODO_FAILURE","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","fetchTodoRequest","type","fetchUserRequest","fetchList","dispatch","axios","get","then","response","todos","data","payload","fetchTodoSuccess","catch","err","errorMsg","message","fetchTodoFailure","fetchUserInfo","userId","id","user","fetchUserSuccess","fetchUserFailure","LeftTable","Table","Column","props","useDispatch","useEffect","loading","dataIndex","useState","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","handleSearch","selectedKeys","confirm","handleReset","clearFilters","columns","title","key","width","sorter","a","b","filterDropdown","setSelectedKeys","style","padding","ref","node","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","onClick","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","completed","dataSource","Right","info","useSelector","state","todo","todoId","className","name","email","connect","list","initialState","error","reducer","action","rootReducer","combineReducers","todoReducer","userReducer","store","createStore","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aafae3cc.chunk.js","sourcesContent":["//todo action types\r\nexport const FETCH_TODO_REQUEST = 'FETCH_TODO_REQUEST'\r\nexport const FETCH_TODO_SUCCESS = 'FETCH_TODO_SUCCESS'\r\nexport const FETCH_TODO_FAILURE = 'FETCH_TODO_FAILURE'\r\n\r\n//user action types\r\nexport const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE'\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n  FETCH_TODO_FAILURE,\r\n  FETCH_TODO_REQUEST,\r\n  FETCH_TODO_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n} from \"./todoTypes\";\r\n\r\n//todo actions\r\nexport const fetchTodoRequest = () => {\r\n  return {\r\n    type: FETCH_TODO_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchTodoSuccess = (todos) => {\r\n  return {\r\n    type: FETCH_TODO_SUCCESS,\r\n    payload: todos,\r\n  };\r\n};\r\n\r\nexport const fetchTodoFailure = (err) => {\r\n  return {\r\n    type: FETCH_TODO_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\n//user info actions\r\nexport const fetchUserRequest = () => {\r\n  return {\r\n    type: FETCH_USER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = (user, id) => {\r\n  return {\r\n    type: FETCH_USER_SUCCESS,\r\n    payload: {\r\n      user,\r\n      id\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchUserFailure = (err) => {\r\n  return {\r\n    type: FETCH_USER_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const fetchList = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchTodoRequest);\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos\")\r\n      .then((response) => {\r\n        const todos = response.data;\r\n        dispatch(fetchTodoSuccess(todos));\r\n      })\r\n      .catch((err) => {\r\n        const errorMsg = err.message;\r\n        dispatch(fetchTodoFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUserInfo = (userId, id) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest);\r\n    axios\r\n      .get(`https://jsonplaceholder.typicode.com/users/${userId}`)\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user, id));\r\n      })\r\n      .catch((err) => {\r\n        const errorMsg = err.message;\r\n        dispatch(fetchUserFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Button, Input, Space, Table, Tag } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchUserInfo } from \"../redux/todos/todoActions\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Column } = Table;\r\n\r\nconst LeftTable = (props) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!props.loading) {\r\n      dispatch(fetchUserInfo(props.todos[0].userId, props.todos[0]));\r\n    }\r\n  }, [props.loading]);\r\n\r\n  let data = props.todos;\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n  let searchInput = null;\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText(\"\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ToDo ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: \"15%\",\r\n      sorter: (a, b) => a.id - b.id,\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      ...getColumnSearchProps(\"title\"),\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"completed\",\r\n      key: \"id\",\r\n      render: (completed) => (\r\n        <Tag color=\"blue\" key={\"tag\"}>\r\n          {completed ? \"Completed\" : \"Pending\"}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"userId\",\r\n      key: \"userId\",\r\n      render: (userId, id) => (\r\n        <Button onClick={() => dispatch(fetchUserInfo(userId, id))}>\r\n          View User\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3>Todo List</h3>\r\n      <Table\r\n        dataSource={data}\r\n        loading={props.loading}\r\n        columns={columns}\r\n      ></Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftTable;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport '../containers/Home.css'\r\n\r\nconst Right = () => {\r\n    const info = useSelector(state => state.user.user)\r\n    const todo = useSelector(state => state.user.todoId)\r\n    return (\r\n        <div>\r\n            <h3>User Details</h3>\r\n            {info && todo ?\r\n            <div className=\"DetailBox\">\r\n                <div className=\"InfoItem\">\r\n                    <h4>ToDo ID: </h4>\r\n                    <h4>ToDo Title: </h4>\r\n                    <h4>User ID: </h4>\r\n                    <h4>Name: </h4>\r\n                    <h4>Email: </h4>\r\n                </div>\r\n                <div className=\"InfoData\">\r\n                    <p>{todo.id} </p>\r\n                    <p>{todo.title} </p>\r\n                    <p>{info.id} </p>\r\n                    <p>{info.name} </p>\r\n                    <p>{info.email} </p>\r\n                </div>\r\n            </div>:\r\n            \"\"\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Right\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LeftTable from \"../components/LeftTable\";\r\nimport Right from \"../components/Right\";\r\nimport { fetchList } from \"../redux/todos/todoActions\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    props.fetchList();\r\n  }, [])\r\n\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"UserList\">\r\n          <LeftTable\r\n            todos={!props.data.loading && props.data.list}\r\n            loading={props.data.loading}\r\n          />\r\n        </div>\r\n        <div className=\"UserDetails\">\r\n            <Right />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.todo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchList: () => dispatch(fetchList()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import {\r\n    FETCH_TODO_FAILURE,\r\n    FETCH_TODO_REQUEST,\r\n    FETCH_TODO_SUCCESS\r\n  } from \"./todoTypes\";\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    list: [],\r\n    error: '',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_TODO_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_TODO_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                list: action.payload,\r\n                error: ''\r\n            }\r\n        case FETCH_TODO_FAILURE:\r\n            return {\r\n                loading: false,\r\n                list: [],\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import {\r\n    FETCH_USER_FAILURE,\r\n    FETCH_USER_REQUEST,\r\n    FETCH_USER_SUCCESS,\r\n  } from \"./todoTypes\";\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    error: '',\r\n    user: null,\r\n    todoId: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_USER_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                user: action.payload.user,\r\n                todoId: action.payload.id,\r\n                error: ''\r\n            }\r\n        case FETCH_USER_FAILURE:\r\n            return {\r\n                loading: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux'\r\nimport todoReducer from './todos/todoReducer'\r\nimport userReducer from './todos/userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    todo: todoReducer,\r\n    user: userReducer\r\n    //for more reducer we can user combineReducers method\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport Home from \"./containers/Home\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <h1>Roxiler Systems</h1>\n        <Home />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}